generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MASTER
  STAFF
}

model Admin {
  id            Int                      @id @default(autoincrement())
  username      String                   @unique
  password      String
  role          Role
  placementData PlacementStudentSupport?
  trainingData  TrainingStudentSupport?
  educationData EducationStudentSupport?
}

model Student {
  id                    String                   @id @default(cuid())
  candidateName         String
  aadharNumber          String                   @unique
  emailId               String                   @unique
  phoneNo               String                   @unique @default("")
  address               String
  state                 String
  city                  String
  dob                   DateTime
  gender                String
  category              String
  religion              String
  residentialStatus     String
  financialStatus       String
  fathersOccupation     String
  guardianContactNumber String
  termsAccepted         Boolean                  @default(true)
  supportType           String[]
  education             StudentEducation?
  trainingSupport       TrainingStudentSupport?
  placementSupport      PlacementStudentSupport?
  educationSupport      EducationStudentSupport?
  regTime               DateTime                 @default(now())
}

model StudentEducation {
  id                 String   @id @default(cuid())
  studentId          String   @unique
  qualificationBoard String
  passingYear        String
  percentage         String
  division           String
  date               DateTime
  student            Student  @relation(fields: [studentId], references: [id])
}

model TrainingStudentSupport {
  id             String  @id @default(cuid())
  studentAadhar  String  @unique
  paid           Boolean @default(false)
  fees           String  @default("")
  trainingSector String
  location       String
  organization   String
  mode           String
  role           String
  FilledBy       String  @unique
  Admin          Admin   @relation(fields: [FilledBy], references: [username])
  student        Student @relation(fields: [studentAadhar], references: [aadharNumber])
}

model PlacementStudentSupport {
  id            String  @id @default(cuid())
  studentAadhar String  @unique
  student       Student @relation(fields: [studentAadhar], references: [aadharNumber])
  industry      String
  location      String
  fees          String  @default("")
  salary        String
  company       String
  profileJob    String
  paid          Boolean @default(false)
  FilledBy      String  @unique
  Admin         Admin   @relation(fields: [FilledBy], references: [username])
}

model EducationStudentSupport {
  id                   String  @id @default(cuid())
  studentAadhar        String  @unique
  student              Student @relation(fields: [studentAadhar], references: [aadharNumber])
  paid                 Boolean @default(false)
  furtherQualification String
  fees                 String  @default("")
  FilledBy             String  @unique
  Admin                Admin   @relation(fields: [FilledBy], references: [username])
}

model GalleryImage {
  id   String @id @default(cuid())
  link String
}
